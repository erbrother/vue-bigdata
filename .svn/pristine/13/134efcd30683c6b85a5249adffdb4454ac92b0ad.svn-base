<template>
  <div>
    <div class="home" ref="home">
      <div class="home-item">
        <canvas ref="canvas" id="barCanvas" height="500px"></canvas>
      </div>
      <div class="home-item">
        <canvas ref="line" id="barCanvas" height="500px"></canvas>
      </div>
    </div>    
  </div>
</template>
<script>
  import echarts from 'echarts'

  export default {
    methods: {
      initCanvas() {
        this.$refs.canvas.width = this.$refs.canvas.parentElement.clientWidth
        this.$refs.line.width = this.$refs.line.parentElement.clientWidth
      },
      _initPie() {
        const charts = echarts.init(this.$refs.canvas)
        charts.showLoading()
        setTimeout(() => {
          charts.hideLoading()
          charts.setOption({
            title: {
              text: '饼图',
              textstyle: {
                color: 'rgba(0, 0, 0, 1)'
              }
            },
            legend: {
              data: ['视频广告']
            },
            visualMap: {
              show: false,
              min: 80,
              max: 600,
              inRange: {
                colorLightness: [0, 1]
              }
            },
            series: [{
              name: '访问来源',
              type: 'pie',
              radius: '55%',
              data: [
                {value: 235, name: '视频广告'},
                {value: 274, name: '联盟广告'},
                {value: 310, name: '邮件营销'},
                {value: 335, name: '直接访问'},
                {value: 400, name: '搜索引擎'}
              ],
              roseType: 'angle',
              label: {
                normal: {
                  textStyle: {
                    color: 'rgba(0, 0, 0, 0.5)'
                  }
                }
              },
              labelLine: {
                normal: {
                  lineStyle: {
                    color: 'rgba(0, 0, 0, 0.3)'
                  }
                }
              }
            }]
          })
        }, 500)
      },
      _initLine() {
        const initLine = echarts.init(this.$refs.line)
        let option = {
          title: {
            text: '一天流量分布',
            subtext: '纯属虚构'
          },
          tooltip: {
            trigger: 'axis',
            axisPointer: {
              type: 'cross'
            }
          },
          toolbox: {
            show: true,
            feature: {
              saveAsImage: {}
            }
          },
          xAxis: {
            type: 'category',
            boundaryGap: false,
            data: ['00:00', '01:15', '02:30', '03:45', '05:00', '06:15', '07:30', '08:45', '10:00', '11:15', '12:30', '13:45', '15:00', '16:15', '17:30', '18:45', '20:00', '21:15', '22:30', '23:45']
          },
          yAxis: {
            type: 'value',
            axisLabel: {
              formatter: '{value} 兆'
            },
            axisPointer: {
              snap: true
            }
          },
          visualMap: {
            show: false,
            dimension: 0,
            pieces: [{
              lte: 6,
              color: 'green'
            }, {
              gt: 6,
              lte: 8,
              color: 'red'
            }, {
              gt: 8,
              lte: 14,
              color: 'green'
            }, {
              gt: 14,
              lte: 17,
              color: 'red'
            }, {
              gt: 17,
              color: 'green'
            }]
          },
          series: [{
            name: '用电量',
            type: 'line',
            smooth: true,
            data: [300, 280, 250, 260, 270, 300, 550, 500, 400, 390, 380, 390, 400, 500, 600, 750, 800, 700, 600, 400],
            markArea: {
              data: [ [{
                name: '早高峰',
                xAxis: '07:30'
              }, {
                xAxis: '10:00'
              }], [{
                name: '晚高峰',
                xAxis: '17:30'
              }, {
                xAxis: '21:15'
              }]]
            }
          }]
        }
        initLine.setOption(option)
      }
    },
    mounted() {
      setTimeout(() => {
        this.initCanvas()
        this._initPie()
        this._initLine()
      }, 200)
    }
  }
</script>
<style lang="stylus">
  .home
    display: flex
    display: -webkit-flex
    flex-flow: row wrap
    .home-item
      flex: 1
      margin-right: 10px
</style>